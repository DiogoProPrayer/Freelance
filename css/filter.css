/* CSS rules for the filter/category results page */

/* 0. Filter Form Specific Styling */
.filter-container { /* The main wrapper for the filter options form */
    background-color: var(--color-white);
    padding: var(--spacing-lg);
    border-radius: var(--border-radius-md);
    box-shadow: 0 2px 8px rgba(0,0,0,0.08);
    margin-bottom: var(--spacing-xl);
}

.filter-main {
    display: flex;
    flex-wrap: wrap;
    gap: var(--spacing-lg);
}

.filter-categories {
    flex: 1 1 300px; /* Allow categories to take space and wrap */
    padding-right: var(--spacing-lg); /* Space if next to controls */
    border-right: 1px solid var(--color-light-gray-border); /* Separator on larger screens */
}
.filter-categories p { /* "Choose Categories:" text */
    font-weight: 500;
    margin-bottom: var(--spacing-md);
    color: var(--color-text-primary);
}
.category-label { /* Label for each checkbox */
    display: block; /* Or flex for better alignment if icons were added */
    margin-bottom: var(--spacing-sm);
    font-size: 0.95rem;
    color: var(--color-text-secondary);
    cursor: pointer;
}
.category-label input[type="checkbox"] {
    margin-right: var(--spacing-sm);
    /* Uses default browser styling for checkboxes, or could be custom styled */
}
.category-label:hover {
    color: var(--color-primary-accent);
}


.filter-controls .filter-group { /* Group for sort, order, price, rating etc. */
    margin-bottom: var(--spacing-lg);
}
.filter-controls .filter-group:last-child {
    margin-bottom: 0;
}

.filter-controls .filter-group label {
    /* Uses .form-group label style from components.css if wrapped in .form-group */
    /* If not, define here or ensure consistency */
    display: block;
    margin-bottom: var(--spacing-xs);
    font-weight: 500;
    color: var(--color-text-secondary);
    font-size: 0.9rem;
}

.filter-controls .filter-group input[type="number"],
.filter-controls .filter-group select {
    /* These will inherit from components.css */
    margin-bottom: var(--spacing-sm); /* Space below each input/select in a group */
    width: 100%; /* Ensure they take full width of their container */
}

.filter-buttons {
    display: flex;
    justify-content: flex-end; /* Align buttons to the right */
    gap: var(--spacing-md);
    margin-top: var(--spacing-lg);
    padding-top: var(--spacing-lg);
    border-top: 1px solid var(--color-light-gray-border);
}
/* Buttons themselves (.btn, .btn-primary, .btn-outline) are styled in components.css */


/* Responsive adjustments for filter form */
@media (max-width: 768px) {
    .filter-main {
        flex-direction: column;
    }
    .filter-categories {
        border-right: none; /* Remove border on smaller screens */
        padding-right: 0;
        margin-bottom: var(--spacing-lg); /* Space below categories when stacked */
    }
    .filter-buttons {
        justify-content: center; /* Center buttons on smaller screens */
    }
    .filter-buttons .btn {
        flex-grow: 1; /* Allow buttons to take more space */
        max-width: 200px; /* But not too wide */
    }
}


/* 1. Page Container and Header */
body.filter-page-active {
    /* This class should be added to the body tag via PHP on filter.php */
    /* Can be used for global overrides if needed for this specific page */
}

main.filter-results-container {
    max-width: 1200px;
    margin: var(--spacing-xl) auto;
    padding: 0 var(--spacing-xl);
}

main.filter-results-container > header {
    margin-bottom: var(--spacing-xl);
    text-align: center;
}

main.filter-results-container > header h1 {
    /* Uses h1 style from base.css */
    position: relative;
    display: inline-block; /* Allows ::after to be positioned relative to text width */
    padding-bottom: var(--spacing-sm); /* Space for the underline */
    /* Additional styling from base.css h1 will apply for font-size, color etc. */
}

main.filter-results-container > header h1::after {
    /* Underline effect, similar to base.css section h2 */
    content: '';
    position: absolute;
    bottom: 0;
    left: 50%;
    transform: translateX(-50%);
    width: 80px; /* Width of the underline */
    height: 4px;
    background: var(--color-primary-accent);
    border-radius: 2px;
}

/* 2. Filter Controls (if any are added to the page later) */
.filter-controls {
    display: flex;
    justify-content: space-between;
    align-items: center;
    margin-bottom: var(--spacing-xl);
    padding: var(--spacing-md);
    background-color: var(--color-white);
    border-radius: var(--border-radius-md);
    box-shadow: 0 1px 5px rgba(0,0,0,0.05);
}

.filter-controls .sort-options select {
    /* Uses global select style from components.css */
    width: auto; /* Override default width:100% if needed */
    min-width: 200px;
}

.filter-controls .view-toggle button {
    /* For list/grid view toggle */
    background: none;
    border: 1px solid var(--color-light-gray-border);
    padding: var(--spacing-sm);
    border-radius: var(--border-radius-sm);
    cursor: pointer;
    transition: background-color 0.3s ease, color 0.3s ease;
}

.filter-controls .view-toggle button.active {
    background-color: var(--color-primary-accent);
    color: var(--color-white);
    border-color: var(--color-primary-accent); /* Ensure border matches active state */
}
.filter-controls .view-toggle button:not(.active):hover {
    background-color: var(--color-background); /* Subtle hover for non-active buttons */
}


/* 3. Service List / Results Display */
.service-list-grid { /* Renamed from .service-cards in HTML to match this */
    display: grid;
    grid-template-columns: repeat(auto-fit, minmax(280px, 1fr));
    gap: var(--spacing-xl);
}

/* Each service item in the grid is an <article class="card service-card-item"> */
.service-card-item { /* Class for specific overrides on filter page cards */
    /* Base styles are from .card in components.css */
}

.service-card-item .card-image-container img {
    height: 200px; /* Custom height for images on filter page */
    object-fit: cover;
}

.service-card-item .card-content .card-title { /* Targeting .card-title specifically */
    font-size: 1.1rem; /* Slightly smaller title for filter cards */
    /* Other .card-title styles (font-weight, margin) will be inherited */
}

.service-card-item .card-content .service-description { /* Custom class for description */
    font-size: 0.9rem;
    margin-bottom: var(--spacing-sm);
    /* Add line-clamp if needed */
}


.service-card-item .card-content .service-meta { /* Custom class for price/rating block */
    display: flex;
    justify-content: space-between;
    align-items: center;
    margin-top: var(--spacing-sm);
    font-size: 0.9rem;
}
.service-card-item .card-content .service-meta .price {
    font-weight: bold;
    color: var(--color-primary-accent);
    font-size: 1.1rem; 
}
.service-card-item .card-content .service-meta .rating {
    color: var(--color-text-secondary);
}


.service-card-item .card-actions .btn { /* Targeting .btn within card-actions */
    width: 100%; /* Make button full width in card */
}

/* 4. No Results Message */
.no-results-message {
    text-align: center;
    padding: var(--spacing-xxl) var(--spacing-xl);
    color: var(--color-text-secondary);
    background-color: var(--color-white); /* Optional: give it a subtle background */
    border-radius: var(--border-radius-md); /* Optional: round corners */
    margin-top: var(--spacing-xl); /* Space from header or filter controls */
}

.no-results-message h2 {
    font-size: 1.5em;
    margin-bottom: var(--spacing-md);
    color: var(--color-text-primary); /* Make title slightly more prominent */
}

.no-results-message p {
    font-size: 1.1em;
}

/* 5. Pagination (if implemented later) */
/* Styles moved to components.css */

/* Responsive Adjustments for Filter Page */
@media (max-width: 768px) {
    main.filter-results-container {
        padding: 0 var(--spacing-lg);
    }

    .service-list-grid {
        grid-template-columns: repeat(auto-fit, minmax(250px, 1fr));
        gap: var(--spacing-lg);
    }
}

@media (max-width: 480px) {
    main.filter-results-container {
        padding: 0 var(--spacing-md);
    }

    .service-list-grid {
        grid-template-columns: 1fr; /* Stack cards */
    }

    .filter-controls {
        flex-direction: column;
        gap: var(--spacing-md);
        align-items: stretch; /* Make items full width */
    }

    .filter-controls .sort-options {
        width: 100%; /* Make sort options container full width */
    }
    .filter-controls .sort-options select {
        width: 100%; /* Make select full width */
    }
    .filter-controls .view-toggle {
        display: flex; /* Ensure buttons are in a row */
        justify-content: center; /* Center toggle buttons */
        gap: var(--spacing-sm);
    }
    .filter-controls .view-toggle button {
        flex-grow: 1; /* Allow buttons to share space */
    }

    /* Pagination responsive styles moved to components.css */
}
